{"version":3,"sources":["assets/firebase.svg","context/AuthProvider.tsx","context/UserProvider.tsx","components/ChatRoom.tsx","components/LoginComponent.tsx","App.tsx","reportWebVitals.ts","utils/firebaseConfig.ts","index.tsx"],"names":["AuthContext","createContext","AuthProvider","children","useState","user","undefined","isLoggedIn","state","setState","auth","getAuth","provider","GoogleAuthProvider","useEffect","onAuthStateChanged","handleOnAuthStateChanged","signIn","a","setPersistence","browserLocalPersistence","signInWithPopup","res","signOut","signOutUser","Provider","value","useAuth","useContext","UserContext","UserProvider","console","log","ChatRoom","className","src","logo","alt","displayName","LoginComponent","handleLoginClick","alert","onClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","initializeFirebase","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6MAAe,G,YAAA,IAA0B,sC,sDCsBnCA,EAAcC,wBAClB,IAQIC,EAAyB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAChC,EAA0BC,mBAAoB,CAC5CC,UAAMC,EACNC,YAAY,IAFd,mBAAOC,EAAP,KAAcC,EAAd,KAIMC,EAAOC,cACPC,EAAW,IAAIC,IAErBC,qBAAU,WAGR,OAFcC,YAAmBL,EAAMM,KAGtC,IAEH,IAAMA,EAA2B,SAACX,GAChCI,EAAS,2BAAKD,GAAN,IAAaH,KAAMA,EAAME,aAAcF,MAG3CY,EAAM,uCAAG,4BAAAC,EAAA,+EAELC,YAAeT,EAAMU,KAFhB,uBAGOC,YAAgBX,EAAME,GAH7B,OAGLU,EAHK,OAIXb,EAAS,2BAAKD,GAAN,IAAaH,KAAMiB,EAAIjB,KAAME,YAAY,KAJtC,gDAMXE,EAAS,2BAAKD,GAAN,IAAaH,UAAMC,EAAWC,YAAY,KANvC,yDAAH,qDAUNgB,EAAO,uCAAG,sBAAAL,EAAA,sEACRM,YAAYd,GADJ,OAEdD,EAAS,2BAAKD,GAAN,IAAaH,UAAMC,EAAWC,YAAY,KAFpC,2CAAH,qDAKb,OACE,cAACP,EAAYyB,SAAb,CAAsBC,MAAO,CAAElB,QAAOS,SAAQM,WAA9C,SACGpB,KAKDwB,EAAU,kBAAMC,qBAAW5B,ICjE3B6B,EAAc5B,wBAAgC,IAE9C6B,EAAyB,SAAC,GAAkB,IAAhB3B,EAAe,EAAfA,SACxBK,EAAUmB,IAAVnB,MAMR,OAJAM,qBAAU,WACRiB,QAAQC,IAAI,2BAA4BxB,EAAMH,QAC7C,CAACG,EAAMH,OAGR,cAACwB,EAAYJ,SAAb,CAAsBC,MAAOlB,EAAMH,KAAnC,SAA0CF,KCA/B8B,EAZY,WACzB,IAAM5B,EDecuB,qBAAWC,GCd/B,OACE,yBAAQK,UAAU,aAAlB,UACE,qBAAKA,UAAU,WAAWC,IAAKC,EAAMC,IAAI,kBACzC,8DACA,uCACA,qDAAiBhC,QAAjB,IAAiBA,OAAjB,EAAiBA,EAAMiC,mBCSdC,EAlBQ,WACrB,IAAQtB,EAAWU,IAAXV,OAEFuB,EAAgB,uCAAG,sBAAAtB,EAAA,+EAEfD,IAFe,sDAIrBwB,MAAM,wBAJe,wDAAH,qDAQtB,OACE,sBAAKP,UAAU,YAAf,UACE,wBAAQQ,QAASF,EAAjB,uBADF,QCCWG,MAVf,WACE,IAAQnC,EAAUmB,IAAVnB,MAER,OACE,qBAAK0B,UAAU,MAAf,SACG1B,EAAMD,WAAa,cAAC,EAAD,IAAe,cAAC,EAAD,OCI1BqC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,QCPRQ,EAAiB,CACrBC,OAAQ,0CACRC,WAAY,iCACZC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAGU,WACzBC,YAAcR,ICJhBS,GAEAC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,UAINC,SAASC,eAAe,SAM1BvB,M","file":"static/js/main.2f01fbd3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/firebase.5e205f16.svg\";","import { useContext } from \"react\";\nimport { createContext } from \"react\";\nimport {\n  GoogleAuthProvider,\n  getAuth,\n  signInWithPopup,\n  signOut as signOutUser,\n  User,\n  setPersistence,\n  browserLocalPersistence,\n  onAuthStateChanged,\n} from \"firebase/auth\";\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\n\ninterface AuthContextInterface {\n  state: UserState;\n  signIn: () => void;\n  signOut: () => void;\n}\n\nconst AuthContext = createContext<AuthContextInterface>(\n  {} as AuthContextInterface\n);\n\nexport interface UserState {\n  user?: User;\n  isLoggedIn: boolean;\n}\n\nconst AuthProvider: React.FC = ({ children }) => {\n  const [state, setState] = useState<UserState>({\n    user: undefined,\n    isLoggedIn: false,\n  } as UserState);\n  const auth = getAuth();\n  const provider = new GoogleAuthProvider();\n\n  useEffect(() => {\n    const unsub = onAuthStateChanged(auth, handleOnAuthStateChanged);\n\n    return unsub;\n  }, []);\n\n  const handleOnAuthStateChanged = (user: any) => {\n    setState({ ...state, user: user, isLoggedIn: !!user });\n  };\n\n  const signIn = async (): Promise<void> => {\n    try {\n      await setPersistence(auth, browserLocalPersistence);\n      const res = await signInWithPopup(auth, provider);\n      setState({ ...state, user: res.user, isLoggedIn: true });\n    } catch (err) {\n      setState({ ...state, user: undefined, isLoggedIn: false });\n    }\n  };\n\n  const signOut = async (): Promise<void> => {\n    await signOutUser(auth);\n    setState({ ...state, user: undefined, isLoggedIn: false });\n  };\n\n  return (\n    <AuthContext.Provider value={{ state, signIn, signOut }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nconst useAuth = () => useContext(AuthContext);\n\nexport { AuthProvider, useAuth };\n","import { User } from \"firebase/auth\";\nimport { useEffect } from \"react\";\nimport { useContext } from \"react\";\nimport { createContext } from \"react\";\nimport { useAuth } from \"./AuthProvider\";\n\nconst UserContext = createContext<User | undefined>({} as User);\n\nconst UserProvider: React.FC = ({ children }) => {\n  const { state } = useAuth();\n\n  useEffect(() => {\n    console.log(\"User set in userprovider\", state.user);\n  }, [state.user]);\n\n  return (\n    <UserContext.Provider value={state.user}>{children}</UserContext.Provider>\n  );\n};\n\nconst useUser = () => useContext(UserContext);\n\nexport { UserProvider, useUser };\n","import React from \"react\";\nimport logo from \"../assets/firebase.svg\";\nimport { useUser } from \"../context/UserProvider\";\n\nconst ChatRoom: React.FC = () => {\n  const user = useUser();\n  return (\n    <header className=\"app-header\">\n      <img className=\"app-logo\" src={logo} alt=\"Firebase logo\" />\n      <h1>Skyskolen firebase-workshop!</h1>\n      <h2>Del 3</h2>\n      <h3>Godt jobbet {user?.displayName}</h3>\n    </header>\n  );\n};\n\nexport default ChatRoom;\n","import { useAuth } from \"../context/AuthProvider\";\n\nconst LoginComponent = () => {\n  const { signIn } = useAuth();\n\n  const handleLoginClick = async () => {\n    try {\n      await signIn();\n    } catch (err) {\n      alert(\"Kunne ikke logge inn\");\n    }\n  };\n\n  return (\n    <div className=\"app-login\">\n      <button onClick={handleLoginClick}>Logg inn!</button>;\n    </div>\n  );\n};\n\nexport default LoginComponent;\n","import \"./styles/App.scss\";\nimport ChatRoom from \"./components/ChatRoom\";\nimport LoginComponent from \"./components/LoginComponent\";\nimport { useAuth } from \"./context/AuthProvider\";\n\nfunction App() {\n  const { state } = useAuth();\n\n  return (\n    <div className=\"app\">\n      {state.isLoggedIn ? <ChatRoom /> : <LoginComponent />}\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { initializeApp } from \"firebase/app\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBYvsc1F5b6sbtheq48ue8q8XwaQnJONE8\",\n  authDomain: \"skyskolen-demo.firebaseapp.com\",\n  projectId: \"skyskolen-demo\",\n  storageBucket: \"skyskolen-demo.appspot.com\",\n  messagingSenderId: \"597494991412\",\n  appId: \"1:597494991412:web:cb9267142692a270da5861\",\n  measurementId: \"G-YWYHRD3Y3B\",\n};\n\nconst initializeFirebase = () => {\n  initializeApp(firebaseConfig);\n};\n\nexport default initializeFirebase;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { AuthProvider } from \"./context/AuthProvider\";\nimport initializeFirebase from \"./utils/firebaseConfig\";\nimport { UserProvider } from \"./context/UserProvider\";\n\ninitializeFirebase();\n\nReactDOM.render(\n  <React.StrictMode>\n    <AuthProvider>\n      <UserProvider>\n        <App />\n      </UserProvider>\n    </AuthProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}